<div class="container">
	<div class="row">
		<a href="localhost:3000" class="col-md-6 offset-md-3" id="top_element">Critic Matcher</a>
	</div>
</div>
<div class="container">
	<div class="row">
		<div id="movies" class= "col-md-6 offset-md-3">
		</div>
	</div>
</div>

<script type="text/javascript">

	// Variables
	var all_movies;
	var active_movies;
	var critics_results;
	var reviews_active;
	var array_of_movie_ids =[];

	// Functions

	//Gets initial 5 movies to load onto landing page
	function getFirstMovies()  {
		return $.ajax({
				dataType: 'json',
				url: '/api/movies/first-movies',
				success: function(data) {
					console.log('success', data);
					active_movies = data;				
				}						
		})
	}

	//Gets all matching movies as a follow up to draw from for reviews
	function getAllMovies()  {
		return $.ajax({
				dataType: 'json',
				url: '/api/movies',
				success: function(data) {
					console.log('success', data);
					all_movies = data;	
					// delete the active movies from it			
				}						
		})
	}

	// Sets the variable for array of movies in preparation for getting the reviews for active
	function setMovieIdArray(){
		for(var count = 0; count < active_movies.length; count++){
			array_of_movie_ids.push(active_movies[count].id)
		}
		return array_of_movie_ids;
	}

	//Gets the reviews for the active movies being rated by the user
	function getActiveReviews() {
		// get the array and change it to a string
		var movie_ids = array_of_movie_ids
		return $.ajax({
			datatype: 'json',
			url: '/api/reviews/' + movie_ids,
			success: function(data) {
				reviews_active = data;
				console.log('success', data);
			}
		})
		return reviews_active;
	}

	// Reorganizes reviews to be easily called by id number
	function reorganizeReviews(){
		var active_reviews = {};
		for(var i=0; i < reviews_active.length; i++){
			id = reviews_active[i][i].movie_id + ''
			active_reviews[id] = reviews_active[i]
		}
		reviews_active = active_reviews;
	}
	// button is clicked
	// user review hash is updated with movie_id and rating
	// figure out which movie id it is, grab that movie id hash, loop through each review
	// for each review, get critic review, id, name. update critics hash with 
	//Update DOM with active movies
	function updateDomWithMovies(){
		var movies_html_id = document.querySelector("#movies");
		active_movies.forEach((movie, i)=>{
			var movieTitle 	= document.createElement('div');
			movieTitle.className = 'title_' + (i+1);
			var image 	= document.createElement('img');
			var buttons = document.createElement('div');
			$(buttons).attr('id', movie.id);
			console.log(buttons + ' is buttons')
			for(var i=1; i < 5; i++){
				var button = document.createElement('button');
				button.className = 'review_button_' + i;
				button.addEventListener('click', function() { 
					console.log(this);

				})
				button.innerHTML = i;
				buttons.appendChild(button);
			}
			var havent_seen_button = document.createElement('button');
			havent_seen_button.className = 'havent_seen';
			havent_seen_button.innerHTML = "Have not seen";
			havent_seen_button.addEventListener('click', function() { 
					console.log(this.parentNode);
				})
			buttons.appendChild(havent_seen_button);
			movieTitle.innerHTML = movie.title;
			movies_html_id.appendChild(movieTitle);
			movies_html_id.appendChild(buttons);
		})
	}

	//Main
	$( document ).ready(function() {
		// here get the width with a mediaquery and put that in a variable and then call number of movies for that width below
		getFirstMovies()
		.then(updateDomWithMovies)
		.then(setMovieIdArray)
		.then(getActiveReviews)
		.then(reorganizeReviews)
		.then(function(){
			for(var i = 0; i < active_movies.length; i++){
				console.log(active_movies[i].title)
			}
		})
		.then(getAllMovies)
	})

	

	// list the movies info - for console just name

	// take input, convert to integer, call a javascript method check reviews (unless they selected didn't see it then do nothing)
		// check_reviews - [{movie_id: 5, reviews: [{critic_id: 5, score: 30}, {critic_id: 53, score: 99}], movie_id: 10, reviews: [{critic_id: 34, 
		//score: 50}]}]
		// update critics - iterates through reviews for that movie and updates critic_match array
		// [{critic_id: 1, critic_name: "harry buttz", matches: 3, points: 56, percentage: 72}, {more critics}]
		// so loop through it, during loop, compare each percentage if matches greater than 5, with top_three array
		// if the percentage is higher, replace top three lowest
		// have a function that prints out in console, top 3 critics, matches, percentage


</script>
